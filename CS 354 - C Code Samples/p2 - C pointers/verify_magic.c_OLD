#include <stdio.h>
#include <stdlib.h>
#include <string.h>

// Structure representing Square
// size: dimension(number of rows/columns) of the square
// array: 2D array of integers
typedef struct Square {
	int size;
	int **array;
} Square;

// construct_square reads the input file to initialize a square struct
// from the contents of the file and returns the square.
// The format of the file is defined in the assignment specifications
Square *construct_square(char *filename)
{

	// Open and read the file

    // Read the first line to get the square size

 	// Initialize a new Square struct of that size
    
 	// Read the rest of the file to fill up the square

 	return NULL;
}

// verify_magic verifies if the square is a magic square
// returns 1(true) or 0(false)
int verify_magic(Square * square)
{
	// Check all rows sum to same number

	// Check all cols sum to same number

	// Check main diagonal

	// Check secondary diagonal

	return 0;
}

Square *construct_square(char *filename);
int verify_magic(Square * square);

int main(int argc, char *argv[])
{
	// Check input arguments to get filename
	if(1 != argc)
	{
		// Not the correct number of arguments, exit the program
		printf(stderr, "Invalid number of arguments, please provide one argument as the filename for the magic square to varify.\n");
		exit(1);
	}

	// Construct square
	FILE *ifp, *ofp;

	ifp = fopen(argv[0], "r");
	if

	// Verify if it's a magic square and print true or false

	return 0;
}

